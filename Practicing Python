{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Tritek_python.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyNkRmq1ozxPk0mHMcEvCgZF",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/maseomoruyi/data-analytics-project/blob/main/Practicing%20Python\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "CONTENT OVERVIEW"
      ],
      "metadata": {
        "id": "4Id8plxH8d6q"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "sdo-ar5Vz38H"
      },
      "outputs": [],
      "source": [
        "#Comments\n",
        "#Algorithm\n",
        "#Print\n",
        "#Input\n",
        "#Data Types\n",
        "#Conditional Statement\n",
        "#Loops"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Commenting On Python"
      ],
      "metadata": {
        "id": "opD56fhSAFag"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Python Day 1 <- This is how you comment! Use a '#'\n",
        "#This is a single line comment in python programming language."
      ],
      "metadata": {
        "id": "xqPUfmW7-B75"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "'''\n",
        "This is for multiple line comments in python.\n",
        "All i need to do is to use apostrophes at the opening and closing of the lines.\n",
        "'''"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 53
        },
        "id": "TEqufCHw_w1V",
        "outputId": "65dec1c1-1a92-42b9-f1ab-eee303fd4409"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'\\nThis is for multiple line comments in python.\\nAll i need to do is to use apostrophes at the opening and closing of the lines.\\n'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Algorithm"
      ],
      "metadata": {
        "id": "RHxpRIicAipr"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Algorithm is a step by step procedure of instructions guven to a computer system.\n",
        "\n",
        "#Example: Write a program to add up 2 numbers\n",
        "\n",
        "#Algorithm\n",
        "#Step 1: Request for the 1st number\n",
        "#Step 2: Request for the 2nd number\n",
        "#Step 3: Sum both numbers\n",
        "#Step 4: Display Result"
      ],
      "metadata": {
        "id": "gdMuy4zCAlx4"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Python Print Function"
      ],
      "metadata": {
        "id": "ZgHKcleFEVwe"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#python print function is used to display outputs\n",
        "\n",
        "#Print out Hello Tritek Pythonisters. Welcome to Python!\n",
        "#Use the print function, then use a double quote for strings\n",
        "\n",
        "print(\"Hello Tritek Pythonisters. Welcome to Python!\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_zTRIayHEXyR",
        "outputId": "4713d146-b18e-41ce-a137-c38db10b7f16"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Hello Tritek Pythonisters. Welcome to Python!\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"My name is Mase\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "whmc31TtILtb",
        "outputId": "144e442c-1792-401e-c6fc-b828d9638dff"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "My name is Mase\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Sum 2 + 2\n",
        "print(2+2)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "hXCvvZPAK3AE",
        "outputId": "c370ac4f-a140-4fd2-a8ed-58dac7da4f5e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "4\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"2+2\")\n",
        "#Recognises it as a string"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jDhiETEvL0mB",
        "outputId": "14624133-e290-4319-e93c-a71550d8d40b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "2+2\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Python Input Function"
      ],
      "metadata": {
        "id": "8rMLUD-1Ly20"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Write a python programme to ask user for his/her name\n",
        "input(\"Mase, Enter your age: \")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 53
        },
        "id": "ZlYZAaUvL8Mc",
        "outputId": "22d0884b-01e9-4d26-d99f-beb560976b44"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Mase, Enter your age: 23\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'23'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "input(\"Enter a number between 1 and 10: \")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 53
        },
        "id": "L17mRa_uNZBW",
        "outputId": "dfee733c-765a-4152-88bf-ad43eec491ec"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Enter a number between 1 and 10: 5\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "'5'"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "string"
            }
          },
          "metadata": {},
          "execution_count": 19
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Variables"
      ],
      "metadata": {
        "id": "nbAP7BGtSshI"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Variables are 'containers' that are used to store values.\n",
        "#Examples\n",
        "a = 1\n",
        "# 'a' is the variable and the value of a is '1'"
      ],
      "metadata": {
        "id": "KO-qqfaMStqq"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(a)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "6n-yTCkeS_dg",
        "outputId": "bc638822-c5dd-4957-d42e-6e0aa95de02b"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Storing name as a variable\n",
        "#List Algorithm\n",
        "#Step 1: Ask use for name \n",
        "#Step 2: Store users name in the variable called name \n",
        "#Step 3: Display the value in the variable\n",
        "name = input(\"What is your name: \")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vp0165aeUG_j",
        "outputId": "7a4c0d05-2d98-46f0-f835-d0b1beed94e1"
      },
      "execution_count": 29,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "What is your name: Mase\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(name)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vq7aM4UZWDeO",
        "outputId": "c08a3c4a-c48d-494b-b30b-dc4d177d9d0b"
      },
      "execution_count": 30,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mase\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Putting variables within sentences using 'placeholders' {}"
      ],
      "metadata": {
        "id": "Yt43qWEMtWFv"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#placeholders structure= \"....{}\".format(variable) or \"{}\".format(varible)\n",
        "#eg. "
      ],
      "metadata": {
        "id": "ENwLO1uWtkGo"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"My name is {}\".format(name))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Vw2xZaf8kjp3",
        "outputId": "9e900798-0a78-41a9-eed7-a8524eb5e8d6"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "My name is Mase\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"{} is my name.\".format(name))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "vjN2qoErk_Hx",
        "outputId": "cf1fdceb-4f50-4091-bd38-4f717faa9ff2"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mase is my name.\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#Doing name and surname\n",
        "name = input(\"What is your name: \")\n",
        "surname = input(\"What is your surname: \")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Qhwl8JA0lUjV",
        "outputId": "339a3088-cdf6-4181-a857-3a480013c39d"
      },
      "execution_count": 72,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "What is your name: Mase\n",
            "What is your surname: Omoruyi\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(\"{} is my name,\".format(name), \"{} is my surname.\".format(surname))\n",
        "\n",
        "#Cleaner Alternative\n",
        "print(\"{} is my name, {} is my surname\".format(name,surname))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "h0fgnZ6dljFS",
        "outputId": "ab2d4e27-1a23-4cfb-8cce-ec7c80abb4a6"
      },
      "execution_count": 74,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mase is my name, Omoruyi is my surname.\n",
            "Mase is my name, Omoruyi is my surname\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Changing data types eg. from string (str) to integer (int)"
      ],
      "metadata": {
        "id": "VgoG_Z8J3Zty"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#Find difference between age now and age for years ago"
      ],
      "metadata": {
        "id": "IyvgO4W5wcvD"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#NOTE: Anything that has to be in quote will come out as a string so the variable has to be casted\n",
        "#The variable has to be converted from string to integers= put 'int' in front of value\n",
        "#Putting 'int' in front changes the resulting values to integers so subtraction can be done"
      ],
      "metadata": {
        "id": "dYWqIgzW0wGN"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Putting 'int' \n",
        "age1 = int(input(\"Mase, how old are you?: \"))\n",
        "age2 = int(input(\"Mase, how old is your mum?: \"))\n",
        "sub = age2 - age1\n",
        "print(\"The difference between your ages are:{}\".format(sub))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ikv6-WbrwoGG",
        "outputId": "a2aecd42-3410-4206-af6e-7c6997f13d00"
      },
      "execution_count": 88,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mase, how old are you?: 23\n",
            "Mase, how old is your mum?: 63\n",
            "The difference between your ages are:40\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#ALTERNATIVE CONVERSION - putting 'int' in front of the result\n",
        "age1 = input(\"Mase, how old are you?: \")\n",
        "age2 = input(\"Mase, how old is your mum?: \")\n",
        "sub = int(age2) - int(age1)\n",
        "print(\"The difference between your ages are:{}\".format(sub))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GQCwJyYT0czz",
        "outputId": "07e43f19-5d43-453b-efa7-811802464055"
      },
      "execution_count": 90,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mase, how old are you?: 23\n",
            "Mase, how old is your mum?: 63\n",
            "The difference between your ages are:40\n"
          ]
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Finding area of triangle"
      ],
      "metadata": {
        "id": "EPluTN_S4F9N"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# Finding the area of a triangle"
      ],
      "metadata": {
        "id": "58cO-QuT4Jna"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Formula of the area of a triangle: 1/2 base * height\n",
        "base = int(input(\"What is the base of the triangle?: \"))\n",
        "height = int(input(\"What is the height of the triangle?: \"))\n",
        "area = (base*height)/2\n",
        "print(\"The area if this triangle is:{}\".format(area))"
      ],
      "metadata": {
        "id": "1VfnXFUO4Qr9"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Alternative\n",
        "base = float(input(\"What is the base of the triangle?: \"))\n",
        "height = float(input(\"What is the height of the triangle?: \"))\n",
        "area = 0.5* (base*height)\n",
        "print(\"The area if this triangle is:{}\".format(area))"
      ],
      "metadata": {
        "id": "YJHmtrWp6eFJ"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "source": [
        "Conditional Statement"
      ],
      "metadata": {
        "id": "1F43B5uBGsX4"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "#if\n",
        "#else if\n",
        "#else"
      ],
      "metadata": {
        "id": "Ti3LOkIKG3TC"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#If i come to london today, you will see me and if i dont, you will not see me"
      ],
      "metadata": {
        "id": "CKOlmsKcHfzv"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "London = input(\"Mase, are you in London today?\")\n",
        "\n",
        "if London == \"Yes\":\n",
        "  print(\"If I come to London today, you will see me.\")\n",
        "else:\n",
        "  print(\"If I don't come, you will not see me\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "q9wpr3hRHlT-",
        "outputId": "cab5b6c4-279c-408c-d414-a6ac7c7719d5"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Mase, are you in London today?No\n",
            "If I don't, you will not see me\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#EXAMPLE USING AREA OF TRIANGLE"
      ],
      "metadata": {
        "id": "xlvE-vXhLMEK"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#if area of triangle < than 50 write a message to say the area of the triangle is less than 50\n",
        "#if area of triangle  > 50 write the area of the triangle is more than 50"
      ],
      "metadata": {
        "id": "lCKllzW7KDlM"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "base = float(input(\"What is the base of the triangle?: \"))\n",
        "height = float(input(\"What is the height of the triangle?: \"))\n",
        "area = 0.5* (base*height)\n",
        "print(\"The area if this triangle is:{}\".format(area))\n",
        "if area < 50:\n",
        "  print(\"The area of the triangle is less than 50\")\n",
        "else:\n",
        "  print(\"The area of the triangle is more than 50\")"
      ],
      "metadata": {
        "id": "tLE2j39CKLP0"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "_YnB4VB1KX0S"
      },
      "execution_count": null,
      "outputs": []
    }
  ]
}